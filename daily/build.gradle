plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.practice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sourceSets {
  main {
    java {
      srcDir 'build/generated/sources/annotationProcessor/java/main'
    }
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.opencsv:opencsv:5.4'
	implementation 'mysql:mysql-connector-java'
	//@Audited
	implementation "org.hibernate:hibernate-envers"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	//mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	
}

tasks.named('test') {
	useJUnitPlatform()
}

//auth-service
/* plugins {
  id 'org.springframework.boot' version "${springBootVersion}"
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id "org.sonarqube" version "3.3"
  id 'java'
  id 'eclipse'
  id "com.jfrog.artifactory" version "4.24.20"
  id 'pl.allegro.tech.build.axion-release' version '1.13.3'
}

repositories {
    maven {
      url "${artifactory_virtual_url}"
      credentials {
        username = "${artifactory_user}"
        password = "${artifactory_password}"
      }
    }
}
sourceSets {
  main {
    java {
      srcDir 'build/generated/sources/annotationProcessor/java/main'
    }
  }
}

compileJava {
    options.compilerArgs = [
       '-Amapstruct.defaultComponentModel=spring',
       '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

group = 'com.oito.auth'
version = '1.0.0'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

springBoot {
	mainClass = 'com.oito.AuthenticationServiceApplication'
}
jar {
    enabled = false
}
dependencies {

	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.cloud:spring-cloud-starter-config"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
	implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.security:spring-security-crypto"

	implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.38'
    
	implementation "mysql:mysql-connector-java"

	// feign
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

	// AWS
	implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config'
	implementation "io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config"

	//Swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"

	// apache commons
	implementation "org.apache.commons:commons-lang3:3.12.0"
	implementation "org.apache.commons:commons-collections4:4.4"	
    implementation "org.passay:passay:1.6.1"
    implementation "commons-validator:commons-validator:1.7"
    
    implementation "com.oito.common:api-common:1.1.41"
	implementation "com.nimbusds:nimbus-jose-jwt:9.0.1"

    //mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
	
	implementation "org.hibernate:hibernate-envers"
	implementation "org.json:json:20210307"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation("org.junit.vintage:junit-vintage-engine") {
    	exclude group: "org.hamcrest", module: "hamcrest-core"
    	
    // OAUTH token 
	implementation 'com.nimbusds:oauth2-oidc-sdk:9.17'
	
	implementation 'org.springframework.boot:spring-boot-starter-validation'   
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}"
	}
}
test {
	useJUnitPlatform()
}
artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'nocnoc-gradle'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
    resolve {
        repository {
            repoKey = 'nocnoc-gradle-virtual'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}
  */

